<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>ExtJs - Printing GridPanels with GroupingView and GroupSummary Plugin</title>
	
	 <link rel="stylesheet" type="text/css" href="../../ressources/css/ext-all.css" />
	<link href="../css/GroupSummary.css" type="text/css" rel="Stylesheet" /> 
	<link href="Ext.ux.GridTotals.css" type="text/css" rel="Stylesheet" /> 
	<script type="text/javascript" src="../../adapter/ext/ext-base.js"></script> 
	<script type="text/javascript" src="../../ext-all.js"></script> 
	<script type="text/javascript" src="../GroupSummary.js"></script> 
	<script type="text/javascript" src="Ext.ux.Printer.js"></script> 
	<script type="text/javascript" src="Ext.ux.GridTotals.js"></script> 
	<script type="text/javascript" src="../gridfilters/menu/RangeMenu.js"></script>
	<script type="text/javascript" src="../gridfilters/menu/ListMenu.js"></script>
	<script type="text/javascript" src="../gridfilters/GridFilters.js"></script>
	<script type="text/javascript" src="../gridfilters/filter/Filter.js"></script>
	<script type="text/javascript" src="../gridfilters/filter/StringFilter.js"></script>
	<script type="text/javascript" src="../gridfilters/filter/DateFilter.js"></script>
	<script type="text/javascript" src="../gridfilters/filter/ListFilter.js"></script>
	<script type="text/javascript" src="../gridfilters/filter/NumericFilter.js"></script>
	<script type="text/javascript" src="../gridfilters/filter/BooleanFilter.js"></script>
		
	<script type="text/javascript">
		Ext.onReady(function() {

			Ext.QuickTips.init();
			
			var filters = new Ext.ux.grid.GridFilters({
				local : true,
				filters: [{
					type: 'string',
					dataIndex: 'project'
					}]
				});
			
			var xg = Ext.grid;

			var reader = new Ext.data.JsonReader({
				idProperty: 'taskId',
				fields: [
					{ name: 'projectId', type: 'int' },
					{ name: 'project', type: 'string' },
					{ name: 'taskId', type: 'int' },
					{ name: 'description', type: 'string' },
					{ name: 'estimate', type: 'float' },
					{ name: 'rate', type: 'float' },
					{ name: 'cost', type: 'float' },
					{ name: 'due', type: 'date', dateFormat: 'm/d/Y' }
				]
			});
			
			var cm = new Ext.grid.ColumnModel({
			// specify any defaults for each column
				defaults: {
					sortable: false, // columns are not sortable by default
					filterable : true
				},
				columns: [
				{
					id: 'description',
					header: 'Task',
					width: 80,
					sortable: true,
					dataIndex: 'description',
					summaryType: 'count',
					hideable: false,
					summaryRenderer: function(v, params, data) {
						return ((v === 0 || v > 1) ? '(' + v + ' Tasks)' : '(1 Task)');
					},
					editor: new Ext.form.TextField({
						allowBlank: false
					})
				}, {
					header: 'Project',
					width: 20,
					sortable: true,
					dataIndex: 'project'
				}, {
					header: 'Due Date',
					width: 25,
					sortable: true,
					dataIndex: 'due',
					summaryType: 'max',
					renderer: Ext.util.Format.dateRenderer('m/d/Y'),
					summaryRenderer: Ext.util.Format.dateRenderer('m/d/Y'),
					editor: new Ext.form.DateField({
						format: 'm/d/Y'
					})
				}, {
					header: 'Estimate',
					width: 20,
					sortable: true,
					dataIndex: 'estimate',
					summaryType: 'sum',
					renderer: function(v) {
						return v + ' hours';
					},
					summaryRenderer: function(v) {
						return v + ' hours';
					},
					editor: new Ext.form.NumberField({
						allowBlank: false,
						allowNegative: false,
						style: 'text-align:left'
					})
				}, {
					header: 'Rate',
					width: 20,
					sortable: true,
					renderer: Ext.util.Format.usMoney,
					summaryRenderer: Ext.util.Format.usMoney,
					dataIndex: 'rate',
					summaryType: 'average',
					editor: new Ext.form.NumberField({
						allowBlank: false,
						allowNegative: false,
						style: 'text-align:left'
					})
				}, {
					id: 'cost',
					header: 'Cost',
					width: 20,
					sortable: false,
					groupable: false,
					renderer: function(v, params, record) {
						return Ext.util.Format.usMoney(record.data.estimate * record.data.rate);
					},
					dataIndex: 'cost',
					summaryType: 'totalCost',
					summaryRenderer: Ext.util.Format.usMoney
				}
				]
			});
		
			// define a custom summary function
			Ext.ux.grid.GroupSummary.Calculations['totalCost'] = function(v, record, field) {
				return v + (record.data.estimate * record.data.rate);
			};

			// utilize custom extension for Group Summary
			var summary = new Ext.ux.grid.GroupSummary();

			var grid = new xg.EditorGridPanel({
				id: 'myGrid',
				ds: new Ext.data.GroupingStore({
					reader: reader,
					// use local data
					data: app.grid.dummyData,
					sortInfo: { field: 'due', direction: 'ASC' },
					groupField: 'project'
				}),
				colModel: cm,

				view: new Ext.grid.GroupingView({
					forceFit: true,
					showGroupName: false,
					enableNoGroups: false,
					enableGroupingMenu: true,
					hideGroupedColumn: true
				}),

				plugins: [summary, filters],

				tbar: [{
					text: 'Print',
					tooltip: 'Print this GridPanel',
					handler: function() { Ext.ux.Printer.print(Ext.getCmp('myGrid')); }
				}],

				frame: true,
				width: 500,
				height: 450,
				clicksToEdit: 1,
				collapsible: true,
				animCollapse: false,
				trackMouseOver: false,
				//enableColumnMove: false,
				title: 'Sponsored Projects',
				iconCls: 'icon-grid',
				renderTo: document.body
			});

		});

			// set up namespace for application
			Ext.ns('app.grid');
			// store dummy data in the app namespace
			app.grid.dummyData = [
				{ projectId: 100, project: 'Ext Forms: Field Anchoring', taskId: 112, description: 'Integrate 2.0 Forms with 2.0 Layouts', estimate: 6, rate: 150 },
				{ projectId: 100, project: 'Ext Forms: Field Anchoring', taskId: 113, description: 'Implement AnchorLayout', estimate: 4, rate: 150, due: '06/25/2007' },
				{ projectId: 100, project: 'Ext Forms: Field Anchoring', taskId: 114, description: 'Add support for multiple types of anchors', estimate: 4, rate: 150, due: '06/27/2007' },
				{ projectId: 100, project: 'Ext Forms: Field Anchoring', taskId: 115, description: 'Testing and debugging', estimate: 8, rate: 0, due: '06/29/2007' },
				{ projectId: 101, project: 'Ext Grid: Single-level Grouping', taskId: 101, description: 'Add required rendering "hooks" to GridView', estimate: 6, rate: 100, due: '07/01/2007' },
				{ projectId: 101, project: 'Ext Grid: Single-level Grouping', taskId: 102, description: 'Extend GridView and override rendering functions', estimate: 6, rate: 100, due: '07/03/2007' },
				{ projectId: 101, project: 'Ext Grid: Single-level Grouping', taskId: 103, description: 'Extend Store with grouping functionality', estimate: 4, rate: 100, due: '07/04/2007' },
				{ projectId: 101, project: 'Ext Grid: Single-level Grouping', taskId: 121, description: 'Default CSS Styling', estimate: 2, rate: 100, due: '07/05/2007' },
				{ projectId: 101, project: 'Ext Grid: Single-level Grouping', taskId: 104, description: 'Testing and debugging', estimate: 6, rate: 100, due: '07/06/2007' },
				{ projectId: 102, project: 'Ext Grid: Summary Rows', taskId: 105, description: 'Ext Grid plugin integration', estimate: 4, rate: 125, due: '07/01/2007' },
				{ projectId: 102, project: 'Ext Grid: Summary Rows', taskId: 106, description: 'Summary creation during rendering phase', estimate: 4, rate: 125, due: '07/02/2007' },
				{ projectId: 102, project: 'Ext Grid: Summary Rows', taskId: 107, description: 'Dynamic summary updates in editor grids', estimate: 6, rate: 125, due: '07/05/2007' },
				{ projectId: 102, project: 'Ext Grid: Summary Rows', taskId: 108, description: 'Remote summary integration', estimate: 4, rate: 125, due: '07/05/2007' },
				{ projectId: 102, project: 'Ext Grid: Summary Rows', taskId: 109, description: 'Summary renderers and calculators', estimate: 4, rate: 125, due: '07/06/2007' },
				{ projectId: 102, project: 'Ext Grid: Summary Rows', taskId: 110, description: 'Integrate summaries with GroupingView', estimate: 10, rate: 125, due: '07/11/2007' },
				{ projectId: 102, project: 'Ext Grid: Summary Rows', taskId: 111, description: 'Testing and debugging', estimate: 8, rate: 125, due: '07/15/2007' }
			];
	</script>

</head>
<body>
	<div id="grid-example">
	</div>
</body>
</html>